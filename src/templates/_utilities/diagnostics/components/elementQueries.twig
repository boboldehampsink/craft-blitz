{% set orderBy = orderBy ?? 'count' %}
{% set sortBy = sortBy ?? 'desc' %}
{% set offset = offset ?? 0 %}
{% set limit = 50 %}
{% set search = search ?? null %}

{% set query = craft.blitz.diagnostics.getElementQueriesQuery(siteId, elementType, pageId ?? null)
    .orderBy({ (orderBy): (sortBy == 'desc' ? SORT_DESC : SORT_ASC) }) %}
{% if search %}
    {% do query.andWhere(['like', 'params', search]) %}
{% endif %}

{# The count can only be correctly calculated without a limit. #}
{% set total = clone(query).count() %}
{% set rows = query
    .offset(offset)
    .limit(limit)
    .all() %}

<div s-replace="#elementqueries" s-swap="outerHTML show:#main:top" s-indicator="#elementqueries .elements">
    <header id="header">
        <div class="page-title flex">
            <h1>{{ pluralDisplayName }}</h1>
        </div>
        <div id="toolbar" class="flex">
            <div class="search-container flex-grow texticon has-filter-btn">
                <span class="texticon-icon search icon" aria-hidden="true"></span>
                <input sprig s-trigger="keyup changed delay:400ms" name="search" type="text" class="clearable text fullwidth" autocomplete="off" placeholder="Search">
            </div>
        </div>
    </header>
    <div id="elementqueries">
        {{ hiddenInput('orderBy', orderBy) }}
        {{ hiddenInput('sortBy', sortBy) }}
        <div class="elements">
            <table class="data fullwidth">
                <thead>
                    <tr>
                        <th class="{{ orderBy == 'params' ? 'ordered' }} {{ sortBy == 'desc' ? 'desc' }} orderable">
                            <button type="button" sprig s-val:order-by="params" s-val:sort-by="{{ orderBy == 'params' and sortBy == 'asc' ? 'desc' : 'asc' }}">
                                {{ 'Params'|t('blitz') }}
                            </button>
                        </th>
                        <th>
                            {{ 'SQL'|t('blitz') }}
                        </th>
                        {% if pageId is not defined %}
                            <th class="{{ orderBy == 'count' ? 'ordered' }} {{ sortBy == 'desc' ? 'desc' }} orderable">
                                <button type="button" sprig s-val:order-by="count" s-val:sort-by="{{ orderBy == 'count' and sortBy == 'desc' ? 'asc' : 'desc' }}">
                                    {{ 'Pages'|t('blitz') }}
                                </button>
                            </th>
                        {% endif %}
                    </tr>
                </thead>
                <tbody>
                    {% for row in rows %}
                        <tr>
                            <td class="code">
                                {{ row.params }}
                            </td>
                            <td class="code">
                                {% set sql = 'test' %}
                                {% include '_includes/forms/copytext' with {
                                    id: 'auth-header',
                                    buttonId: 'copy-btn',
                                    value: craft.blitz.diagnostics.getElementQuerySql(elementType, row.params),
                                    size: 40,
                                } %}
                            </td>
                            {% if pageId is not defined %}
                                <td>
                                    {{ row.count }}
                                </td>
                            {% endif %}
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
            <div class="update-spinner spinner spinner-absolute"></div>
        </div>
        {{ include('blitz/_utilities/diagnostics/includes/footer') }}
    </div>
</div>
